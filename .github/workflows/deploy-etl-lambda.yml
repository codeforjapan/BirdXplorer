name: Deploy ETL Lambda Functions to ECR

on:
  pull_request:
    branches:
      - main
    paths:
      - 'etl/**'
      - 'common/**'
      - '.github/workflows/deploy-etl-lambda.yml'
  push:
    branches:
      - main
      - refactro/fix-#175
    paths:
      - 'etl/**'
      - 'common/**'
      - '.github/workflows/deploy-etl-lambda.yml'

env:
  AWS_REGION: ap-northeast-1

jobs:
  deploy:
    name: Build and Push Lambda Images to ECR
    runs-on: ubuntu-latest
    
    permissions:
      id-token: write
      contents: read
    
    strategy:
      matrix:
        lambda:
          - name: language_detect
            dockerfile: Dockerfile.language_detect
            repository: birdxplorer-etl-lang
          - name: note_transform
            dockerfile: Dockerfile.note_transform
            repository: birdxplorer-etl-note-transform
          - name: topic_detect
            dockerfile: Dockerfile.topic_detect
            repository: birdxplorer-etl-topic
          - name: postlookup
            dockerfile: Dockerfile.postlookup
            repository: birdxplorer-etl-postlookup
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
      
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          aws-region: "ap-northeast-1"
      
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2
      
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Determine environment tag
        id: env-tag
        run: |
          if [ "${{ github.event_name }}" = "pull_request" ]; then
            echo "tag=dev" >> $GITHUB_OUTPUT
          elif [ "${{ github.ref }}" = "refs/heads/main" ]; then
            echo "tag=prd" >> $GITHUB_OUTPUT
          else
            echo "tag=dev" >> $GITHUB_OUTPUT
          fi
      
      - name: Extract metadata for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ steps.login-ecr.outputs.registry }}/${{ matrix.lambda.repository }}
          tags: |
            type=raw,value=${{ steps.env-tag.outputs.tag }}
            type=sha,prefix=sha-,format=short
      
      - name: Build and push Docker image
        id: build
        uses: docker/build-push-action@v5
        with:
          context: ./
          file: ./etl/${{ matrix.lambda.dockerfile }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Output image details
        run: |
          echo "Lambda Function: ${{ matrix.lambda.name }}"
          echo "Repository: ${{ matrix.lambda.repository }}"
          echo "Environment: ${{ steps.env-tag.outputs.tag }}"
          echo "Tags: ${{ steps.meta.outputs.tags }}"
          echo "Image Digest: ${{ steps.build.outputs.digest }}"